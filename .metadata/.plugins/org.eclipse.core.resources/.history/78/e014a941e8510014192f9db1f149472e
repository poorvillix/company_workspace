package villix.shinninggroup.shopview;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.content.Context;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;

import villix.shinninggroup.globaldata.GlobalData;
import villix.shinninggroup.seetheshop.CSVFileReader;
import villix.shinninggroup.seetheshop.MainActivity;
import villix.shinninggroup.seetheshop.R;

public class ShopFragChoice {
	private static ShopFragChoice instance = null;
	
	// 商店狀態名稱
	enum ShopListType
	{
		enumShopListName,
		enumShopListHeadPic,
		enumShopListAddress,
		enumDescChoice,
	}
	private static ArrayList<HashMap<String,Object>> mShopList = new ArrayList<HashMap<String,Object>>();
	private static List<String[]> mShopListDesc = new ArrayList<String[]>();

	private ShopFragChoice()
	{
	}
	public static ShopFragChoice getInstance()
	{
		if ( instance == null )
		{
			instance = new ShopFragChoice();
			
			getCSVFile();
			
			getDescCSVFile();
		}
		
		return instance;
	}
	
	private static void getCSVFile()
	{
		Context MainContext = MainActivity.MainActivityThis.getApplicationContext();
		
		InputStream inputStream = MainContext.getResources().openRawResource(R.raw.allshoplist);
		CSVFileReader csvFile = new CSVFileReader(inputStream);
		List<String[]> shopList = null;
		/*
		try
		{
			shopList = csvFile.read();
		} catch (UnsupportedEncodingException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/
        //讀取檔案
        BufferedReader reader;
        
        try {
            
            reader = new BufferedReader(new FileReader());
//            reader.readLine();// 是否讀取第一行 (加上註解代表會讀取,註解拿掉不會讀取)
            String line = null;// 暫存用(測試是否已讀完檔)
            
            // 讀取資料
            while ((line = reader.readLine()) != null) {
                
                //存放每一列資料內容(橫的)
                ArrayList<String> ticketStr = new ArrayList<String>();
                
                String item[] = line.split(",");//csv文件為依據逗號切割
                
                //清除上一次存入的資料
                ticketStr.clear();
                
                //讀檔(單列資料)
                for(int i=0; i<item.length; i++){
                    
                    ticketStr.add(i, item[i]);
                    
//                    System.out.println(ticketStr.get(i));
                }
                
                dataAL.add(ticketStr);
                
                
            }
            
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
		
		if(shopList == null)
			return;
		
		//把資料加入ArrayList中
		for(int nLinePos=0;nLinePos<shopList.size(); nLinePos++)
		{
			HashMap<String,Object> item = new HashMap<String,Object>();
			// 名字
			item.put("Name", shopList.get(nLinePos)[ShopListType.enumShopListName.ordinal()]);
			// 頭像圖片
			String uri = "@drawable/" + shopList.get(nLinePos)[ShopListType.enumShopListHeadPic.ordinal()];
			int imageResource = MainContext.getResources().getIdentifier(uri, null, MainContext.getPackageName());
			item.put("HeadPic", imageResource );
			// 地址
			item.put("Address", shopList.get(nLinePos)[ShopListType.enumShopListAddress.ordinal()] );
			// 選擇呈現方式
			item.put("DescChoice", shopList.get(nLinePos)[ShopListType.enumDescChoice.ordinal()] );
			// 加入List中
			mShopList.add(item);
		}
	}
	
	private static void getDescCSVFile()
	{
		Context MainContext = MainActivity.MainActivityThis.getApplicationContext();
		
		InputStream inputStream = MainContext.getResources().openRawResource(R.raw.allshoplistdesc);
		CSVFileReader csvFile = new CSVFileReader(inputStream);
		List<String[]> shopList = null;
		try
		{
			shopList = csvFile.read();
		} catch (UnsupportedEncodingException e)
		{
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		if(shopList == null)
			return;
		
		mShopListDesc = shopList;
	}
	
	public void onChangeMainFragment()
	{
		onChangeFragment(GlobalData.NowFragState.enumShopList,0); 
	}
	
	public void onChangeFragment(GlobalData.NowFragState nowState, int nChoice)
	{
		FragmentTransaction fragmentTransaction = MainActivity.MainActivityThis.getSupportFragmentManager().beginTransaction();
		
		Fragment nowFrag = null;
		switch(nowState)
		{
		case enumShopList:
			nowFrag = new ShopList();
			break;
		case enumShopWeb:
		case enumShopDescription:
			nowFrag = new ShopDesc(nowState, nChoice);
			fragmentTransaction.setCustomAnimations(R.anim.push_left_in,R.anim.push_left_out,R.anim.push_left_in,R.anim.push_left_out);
			break;
		default:
			break;
		}
		if(nowFrag == null)
			return;
		fragmentTransaction.replace(R.id.mainFrameLayout, nowFrag);
		// 一開始不要用
		if(nowState != GlobalData.NowFragState.enumShopList)
			fragmentTransaction.addToBackStack(null);
		fragmentTransaction.commit();
	
	}
	public ArrayList<HashMap<String,Object>> getShopList()
	{
		return mShopList;
	}
	public HashMap<String,Object> getShopListPos(int nPos)
	{
		return mShopList.get(nPos);
	}
	public GlobalData.NowFragState getShopListPosDescChoice(int nPos)
	{
		return GlobalData.NowFragState.getNowFragStateByString((String) mShopList.get(nPos).get("DescChoice"));
	}

	public String[] getShopListDescPos(int nPos)
	{
		return mShopListDesc.get(nPos);
	}
	
}